pelo git

node -v
v16.13.2
npx create-react-app "name"

npm start
    Starts the development server.

  npm run build
    Bundles the app into static files for production.

  npm test
    Starts the test runner.

  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you can’t go back!


cd name - entrar na pasta
ls -la - listar o que tem na pasta

npm = rodar coisas locais
npx = script de forma remota/não é meu ambiente local


.map retorna um novo array de elementos, baseado no que retornamos na função passada por callback.


todo evento js vai ter um target, e ele pode ter um tab


React tem duas abordagens diferentes para lidar com inputs de formulários.

Um elemento de input de formulário cujo valor é controlado pelo React é chamado de componente controlado (statefull em inglês).
 Quando o usuário insere dados em um componente controlado, o evento que manipula essa alteração é disparado e o seu código decide 
 se o input é válido (ou seja, renderizado com o valor atualizado). Se você não re-renderizar o elemento de formulário, permanecerá inalterado.

Um componente não controlado (stateless em inglês) funciona como um elemento de formulário fora do React. Quando um usuário insere 
dados em um campo de formulário (um input box, dropbox, etc), a informação atualizada é refletida sem necessidade do React fazer nada.
 No entanto, isso também significa que você não pode forçar o campo a ter um certo valor.


Faça o controle dos valores dos inputs utilizando o value e o onChange.
Depois, controle o estado do formulário utilizando o useState.
Por fim, desenvolva o comportamento do Formulário e receba os dados do novo colaborador no App.js.

